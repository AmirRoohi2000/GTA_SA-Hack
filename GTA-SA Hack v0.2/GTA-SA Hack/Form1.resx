<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        IilWDJzBEAAAAAAAt4VYNDIiJQALsRAAAAAAAABmiDNdmcxru6EQAAAAAAAABHgzNVzAu6YBEAAAAAAA
        AAZkTTM9C77gARAAAAAAAAB3iFRTzGumAAEQAAAAAACmhVMzRcsOYAABEAAAAAAAeEFDMzR7AesAARAA
        AAAAuqiIVVwMQAcAAAEQAAAAAAd0VlVcu6egAAABEAAAAACoVEREPLu6YAAAARAAAAAAqDVURTy7uuAA
        AAEQAAAAB2WINVM8u77gAAABEACkREQRTTNTPAu6CgAAARAKEWZBERVREUPLCqoAAAEQvhERERERERZh
        y3rOAAABEApBEREREREatEMadgAAARAApBERERERFgauRGoAAAEQALB0QRERERFKZERwAAABEAAACmZU
        QREREUcGAAAAARAAAABoIiMzM1MLtgAAAAEQAAAAaCIiIiI8u3cAAAABEAAAAOWZIiIiPLtAAAAAARER
        EREREREREREREREREREAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAACgAAAAgAAAAQAAAAAEACAAAAAAAgAQAAAAAAAAAAAAAAAEAAAAA
        AAAAAAAAqr/UAFVfVQAAH1UAAF+qAAA/qgAAP38AVV+qAKrf1AAAHyoAVT9VAFU/fwBVX38AgICAAAA/
        VQD///8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQEBAQEJDQcFBQYKAwUFAwYFBQUO
        DAkGBQUFBQUFAAABAQEBAQEJDAcFBgoDBQUGBgUFBQkCDAMEBQUFBQUAAAEBAQEBAQEJCgcGCgMFBQUG
        BQYGBgkMDgYEBQUFBQAAAQEBAQEBAQECCgsMCQMFBgYFAwYFAwoMAwUFBQUFAAABAQEBAQEBAQENCgoK
        AAYLBgkDBQUGAwwOBgQFBQUAAAEBAQEBAQEBAQEBCQoGCQsDCQUFBQQDCgwOBAQFBQAAAQEBAQEBAQEB
        AQENCgcGCQkFBQUFBAYJDQ0FBAQEAAABAQEBAQEBAQEBAQEKBwUJAwMGBQUFBAMKAQcEBwcAAAEBAQEB
        AQEBAQEBCAwLAwMLBgkGBQUFBQMBAQEICAAAAQEBAQEBAQEBAQEBAQoKCwsGBgMOBAQHBwoICAgNAAAB
        AQEBAQEBAQEBAQEBAQkMCwYGBgMDBwcBCAgNCgEAAAEBAQEBAQEBAQEBAQEBCgoJCQ4GBgYOAQgIAgIB
        AQAAAQEBAQEBAQEBAQEBAQwMCwsDCQMGBwcKCA0KAQEBAAABAQEBAQEBAQEBAQ0KCwMDBgYGCQMHCAEC
        CgEBAQEAAAEBAQEBAQEBAQEBDAsJAAkGBgYGCQwIAQACCAEBAQAAAQEBAQEBAQEBCA0NCwsLAwMDBwEH
        CQEBDAEBAQEBAAABAQEBAQEBAQEBDAwJAwoDAwMHCAgNDA0BAQEBAQEAAAEBAQEBAQEBAQ0LAwkJCQkJ
        BgcICAgNCgEBAQEBAQAAAQEBAQEBAQEBDQsGAwMJCQMGBwgICA0CAQEBAQEBAAABAQEBAQEBAQwKAwsL
        BgMDBgYHCAgIAgIBAQEBAQEAAAEBAQ0JCQkJCQAACQ4GBgMGBgcBCAgNAQ0BAQEBAQAAAQENAAAKCgkA
        AAAAAwMAAAAJBgcIAQ0NDQEBAQEBAAABCAIAAAAAAAAAAAAAAAAACgoABwgMDQcCAQEBAQEAAAEBDQkA
        AAAAAAAAAAAAAAANCAkJBgANDAoBAQEBAQAAAQEBDQkAAAAAAAAAAAAAAAoBCg0CCQkKDQEBAQEBAAAB
        AQEIAQwJCQAAAAAAAAAAAAkNCgkJCQwBAQEBAQEAAAEBAQEBAQ0KCgMJCQAAAAAAAAAJDAEKAQEBAQEB
        AQAAAQEBAQEBAQoLBQUFBgYGBgYDBgEICAoBAQEBAQEBAAABAQEBAQEBCgsFBQUFBQUFBQYHCAgMDAEB
        AQEBAQEAAAEBAQEBAQECAwQEBQUFBQUFBgcICAkBAQEBAQEBAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA
</value>
  </data>
</root>